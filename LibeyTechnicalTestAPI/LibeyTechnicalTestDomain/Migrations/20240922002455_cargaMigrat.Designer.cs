// <auto-generated />
using LibeyTechnicalTestDomain.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibeyTechnicalTestDomain.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240922002455_cargaMigrat")]
    partial class cargaMigrat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibeyTechnicalTestDomain.LibeyUserAggregate.Domain.DocumentType", b =>
                {
                    b.Property<int>("DocumentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentTypeId"));

                    b.Property<string>("DocumentTypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentTypeId");

                    b.ToTable("DocumentType", (string)null);
                });

            modelBuilder.Entity("LibeyTechnicalTestDomain.LibeyUserAggregate.Domain.LibeyUser", b =>
                {
                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UbigeoCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DocumentNumber");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("UbigeoCode");

                    b.ToTable("LibeyUser", (string)null);
                });

            modelBuilder.Entity("LibeyTechnicalTestDomain.LibeyUserAggregate.Domain.Province", b =>
                {
                    b.Property<string>("ProvinceCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProvinceDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvinceCode");

                    b.ToTable("Province", (string)null);
                });

            modelBuilder.Entity("LibeyTechnicalTestDomain.LibeyUserAggregate.Domain.Region", b =>
                {
                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RegionDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RegionCode");

                    b.ToTable("Region", (string)null);
                });

            modelBuilder.Entity("LibeyTechnicalTestDomain.LibeyUserAggregate.Domain.Ubigeo", b =>
                {
                    b.Property<string>("UbigeoCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProvinceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UbigeoDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UbigeoCode");

                    b.HasIndex("ProvinceCode");

                    b.HasIndex("RegionCode");

                    b.ToTable("Ubigeo", (string)null);
                });

            modelBuilder.Entity("LibeyTechnicalTestDomain.LibeyUserAggregate.Domain.LibeyUser", b =>
                {
                    b.HasOne("LibeyTechnicalTestDomain.LibeyUserAggregate.Domain.DocumentType", "DocumentType")
                        .WithMany("LibeyUsers")
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibeyTechnicalTestDomain.LibeyUserAggregate.Domain.Ubigeo", "Ubigeo")
                        .WithMany("LibeyUsers")
                        .HasForeignKey("UbigeoCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentType");

                    b.Navigation("Ubigeo");
                });

            modelBuilder.Entity("LibeyTechnicalTestDomain.LibeyUserAggregate.Domain.Ubigeo", b =>
                {
                    b.HasOne("LibeyTechnicalTestDomain.LibeyUserAggregate.Domain.Province", "Province")
                        .WithMany("Ubigeos")
                        .HasForeignKey("ProvinceCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibeyTechnicalTestDomain.LibeyUserAggregate.Domain.Region", "Region")
                        .WithMany("Ubigeos")
                        .HasForeignKey("RegionCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("LibeyTechnicalTestDomain.LibeyUserAggregate.Domain.DocumentType", b =>
                {
                    b.Navigation("LibeyUsers");
                });

            modelBuilder.Entity("LibeyTechnicalTestDomain.LibeyUserAggregate.Domain.Province", b =>
                {
                    b.Navigation("Ubigeos");
                });

            modelBuilder.Entity("LibeyTechnicalTestDomain.LibeyUserAggregate.Domain.Region", b =>
                {
                    b.Navigation("Ubigeos");
                });

            modelBuilder.Entity("LibeyTechnicalTestDomain.LibeyUserAggregate.Domain.Ubigeo", b =>
                {
                    b.Navigation("LibeyUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
